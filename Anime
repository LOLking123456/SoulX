local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

local Window = Library.CreateLib("Tower Defense X: BETA | Legend HandlesYT", "Ocean")


local Tab = Window:NewTab("Main-Features")



local Tab2 = Window:NewTab("Player-Features")


local Tab5 = Window:NewTab("Teleports")

local Tab1 = Window:NewTab("Settings")





local Section = Tab:NewSection("Main-Features")

local Section11 = Tab5:NewSection("Teleports")

local Section1 = Tab2:NewSection("Player-Features")

local CredSection = Tab1:NewSection("Settings")


Section:NewToggle("Auto Tap", "Auto Tap", function(Value)
   a = Value
        while a do task.wait()
        pcall(function()
   local args = {
    [1] = {
        [1] = {
            [1] = "\3",
            [2] = "Click",
            [3] = "Execute"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))


   end)
        end
end)

Section:NewToggle("Auto Attack", "Auto Attack", function(Value)
   a = Value
        while a do task.wait()
        pcall(function()
local vim = game:GetService("VirtualInputManager")
local player = game.Players.LocalPlayer
local starterGui = player:WaitForChild("PlayerGui")

-- Function to find a GUI element by type (you might need to customize this based on your needs)
local function findGuiElement(parent, targetType)
    for _, descendant in pairs(parent:GetDescendants()) do
        if descendant:IsA(targetType) then
            return descendant
        end
    end
    return nil
end

-- Find the GUI element
local x = findGuiElement(starterGui, "GuiObject") -- Replace "GuiObject" with the type of GUI element you're looking for

if x then
    local clickX = x.AbsolutePosition.X + x.AbsoluteSize.X / 2 - 10 -- Adjust the value (e.g., subtract 10 for a more left position)
    local clickY = x.AbsolutePosition.Y + x.AbsoluteSize.Y / 2 + 45 -- Adjust the value (e.g., add 10 for a lower position)

    vim:SendMouseButtonEvent(clickX, clickY, 0, true, x, 1)
    vim:SendMouseButtonEvent(clickX, clickY, 0, false, x, 1)
else
    warn("No suitable GUI element found")
end
  end)
        end
end)

Section:NewButton("Redeem All Codes (NEW)", "Redeem Codes", function()
spawn(function()
local args = {
    [1] = {
        [1] = {
            [1] = "\3",
            [2] = "Codes",
            [3] = "Use",
            [4] = "3KLIKES"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
end)
wait(.1)
spawn(function()
local args = {
    [1] = {
        [1] = {
            [1] = "\3",
            [2] = "Codes",
            [3] = "Use",
            [4] = "5KLIKES"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
end)

wait(.1)
spawn(function()
local args = {
    [1] = {
        [1] = {
            [1] = "\3",
            [2] = "Codes",
            [3] = "Use",
            [4] = "RELEASE"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
end)

wait(.1)
spawn(function()
local args = {
    [1] = {
        [1] = {
            [1] = "\3",
            [2] = "Codes",
            [3] = "Use",
            [4] = "1KLIKES"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
end)

spawn(function()
local args = {
    [1] = {
        [1] = {
            [1] = "\3",
            [2] = "Codes",
            [3] = "Use",
            [4] = "SORRYFORSHUTDOWN"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
end)
end)


Section:NewButton("Hitbox", "Hitbox", function()

for i, v in pairs(game.Workspace["_ENEMIES"]:GetDescendants()) do
          if v.Name == "HumanoidRootPart" then

                v.Size = Vector3.new(30,30,30)
                v.Transparency = 0.7
                 v.Material = "Neon"
             v.BrickColor = BrickColor.new("Really red")
                v.CanCollide = true
        end
    end    
end)

Section:NewLabel("Auto Open Eggs")

Section:NewToggle("Auto Cursed Egg (Be Close)", "Auto", function(Value)
   a = Value
        while a do task.wait()
        pcall(function()
local args = {
    [1] = {
        [1] = {
            [1] = "\3",
            [2] = "Pets",
            [3] = "Open",
            [4] = "Cursed Chest",
            [5] = "One"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
  end)
        end
end)


Section:NewToggle("Auto Dragon Egg (Be Close)", "Auto", function(Value)
   a = Value
        while a do task.wait()
        pcall(function()
local args = {
    [1] = {
        [1] = {
            [1] = "\3",
            [2] = "Pets",
            [3] = "Open",
            [4] = "Dragon Chest",
            [5] = "One"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
  end)
        end
end)


Section:NewToggle("Auto Ninja Egg (Be Close)", "Auto", function(Value)
   a = Value
        while a do task.wait()
        pcall(function()
local args = {
    [1] = {
        [1] = {
            [1] = "\3",
            [2] = "Pets",
            [3] = "Open",
            [4] = "Ninja Chest",
            [5] = "One"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
  end)
        end
end)

Section:NewToggle("Auto Hunter Egg (Be Close)", "Auto", function(Value)
   a = Value
        while a do task.wait()
        pcall(function()
local args = {
    [1] = {
        [1] = {
            [1] = "\3",
            [2] = "Pets",
            [3] = "Open",
            [4] = "Hunter Chest",
            [5] = "One"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
  end)
        end
end)

Section:NewToggle("Auto Spirit Egg (Be Close)", "Auto", function(Value)
   a = Value
        while a do task.wait()
        pcall(function()
local args = {
    [1] = {
        [1] = {
            [1] = "\3",
            [2] = "Pets",
            [3] = "Open",
            [4] = "Spirit Chest",
            [5] = "One"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
  end)
        end
end)

Section:NewToggle("Auto Bizarre Egg (Be Close)", "Auto", function(Value)
   a = Value
        while a do task.wait()
        pcall(function()
local args = {
    [1] = {
        [1] = {
            [1] = "\3",
            [2] = "Pets",
            [3] = "Open",
            [4] = "Bizarre Chest",
            [5] = "One"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
  end)
        end
end)

Section11:NewButton("Teleport To Areas 1", "Tp", function()
for i,v in pairs(workspace._AREAS["1"].Barrier:GetChildren()) do
                    if v.Name == "Part" then 
                    
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
 end
 end
end)


Section11:NewButton("Teleport To Areas 2", "Tp", function()
for i,v in pairs(workspace._AREAS["2"].Barrier:GetChildren()) do
                    if v.Name == "Part" then 
                    
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
 end
 end
end)

Section11:NewButton("Teleport To Areas 3", "Tp", function()
for i,v in pairs(workspace._AREAS["3"].Barrier:GetChildren()) do
                    if v.Name == "Part" then 
                    
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
 end
 end
end)

Section11:NewButton("Teleport To Areas 4", "Tp", function()
for i,v in pairs(workspace._AREAS["4"].Barrier:GetChildren()) do
                    if v.Name == "Part" then 
                    
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
 end
 end
end)

Section11:NewButton("Teleport To Areas 5", "Tp", function()
for i,v in pairs(workspace._AREAS["5"].Barrier:GetChildren()) do
                    if v.Name == "Part" then 
                    
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
 end
 end
end)

Section11:NewButton("Teleport To Areas 6", "Tp", function()
for i,v in pairs(workspace._AREAS["6"].Barrier:GetChildren()) do
                    if v.Name == "Part" then 
                    
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
 end
 end
end)

Section1:NewToggle("Noclip", "Go Through Things, Use Infinite Jump With it", function(state) -- 500 (MaxValue) | 0 (MinValue)
local Noclip = nil
local Clip = nil

function noclip()
	Clip = false
	local function Nocl()
		if Clip == false and game.Players.LocalPlayer.Character ~= nil then
			for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
			end
		end
		wait(0.21) -- basic optimization
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
end

function clip()
	if Noclip then Noclip:Disconnect() end
	Clip = true
end

noclip() -- to toggle noclip() and clip()
end)
Section1:NewToggle("Free Camera", "Zoom Out", function(state) -- 500 (MaxValue) | 0 (MinValue)
  local LocalPlayer = game:GetService("Players").LocalPlayer
		LocalPlayer.CameraMaxZoomDistance = 9e9
		LocalPlayer.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Invisicam
end)



Section1:NewSlider("Walkspeed", "Speed", 300, 16, function(s) -- 500 (MaxValue) | 0 (MinValue)
    getgenv().WalkSpeedValue = (s); --set your desired walkspeed here

local Player = game:service'Players'.LocalPlayer;

Player.Character.Humanoid:GetPropertyChangedSignal'WalkSpeed':Connect(function()

Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;

end)


Player.Character.Humanoid.WalkSpeed = getgenv().WalkSpeedValue;
end)


Section1:NewToggle("Infinite Jump", "Infinite Jump", function(state)

 if state then
_G.infinjump = true
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
Mouse.KeyDown:connect(function(k)
if _G.infinjump then
if k:byte() == 32 then
Humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
Humanoid:ChangeState("Jumping")
wait(0.1)
Humanoid:ChangeState("Seated")
end
end
end)
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
    else
if _G.infinjump == true then
_G.infinjump = false
else
_G.infinjump = true
end
end
            end)

Section1:NewSlider("FOV", "Field Of Views", 120, 70, function(s) -- 500 (MaxValue) | 0 (MinValue)
game:GetService'Workspace'.Camera.FieldOfView = (s)
end)

CredSection:NewLabel("Made By Legend HandlesYT")


CredSection:NewKeybind("Toggle UI", "Toggle The UI", Enum.KeyCode.L, function()
	Library:ToggleUI()
end)
