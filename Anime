-- Function to find the closest enemy
local function findClosestEnemy(player)
    local enemiesFolder = workspace:WaitForChild("_ENEMIES")

    local closestEnemy = nil
    local closestDistance = math.huge

    -- Iterate over all folders inside _ENEMIES
    for _, folder in pairs(enemiesFolder:GetChildren()) do
        -- Check if the current folder is named with a number
        local folderNumber = tonumber(folder.Name)
        if folder:IsA("Folder") and folderNumber then
            -- Iterate over all models in the current folder
            for _, model in pairs(folder:GetChildren()) do
                if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") then
                    local distance = (model.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude

                    -- Update the closest enemy if the current one is closer
                    if distance < closestDistance then
                        closestDistance = distance
                        closestEnemy = model
                    end
                end
            end
        end
    end

    return closestEnemy
end

-- Example: Teleport the player to the closest enemy
local player = game.Players.LocalPlayer

-- Find the closest enemy
local closestEnemy = findClosestEnemy(player)

-- Teleport to the closest enemy if one is found
if closestEnemy then
    player.Character:SetPrimaryPartCFrame(CFrame.new(closestEnemy.HumanoidRootPart.Position))
else
    warn("No enemies found.")
end
